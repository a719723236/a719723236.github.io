{"version":3,"sources":["unauthenticated-app/login.tsx","unauthenticated-app/register.tsx","assets/logo.svg","assets/left.svg","assets/right.svg","unauthenticated-app/index.tsx"],"names":["LoginScreen","onError","login","useAuth","useAsync","undefined","throwOnError","run","isLoading","onFinish","values","catch","Item","name","rules","required","message","type","id","placeholder","LongButton","loading","htmlType","RegisterScreen","register","cpassword","password","Error","UnauthenticatedApp","useState","isRegister","setIsRegister","error","setError","Container","Header","Background","ShadowCard","Title","onClick","styled","Button","h2","div","left","right","Card","header","logo"],"mappings":"8QAMaA,EAAc,SAAC,GAAuD,IAAtDC,EAAqD,EAArDA,QACjBC,EAAUC,cAAVD,MADsE,EAEnDE,iBAASC,EAAW,CAACC,cAAc,IAAtDC,EAFsE,EAEtEA,IAAKC,EAFiE,EAEjEA,UAKb,OAAO,kBAAC,IAAD,CAAMC,SAJQ,SAACC,GAClBH,EAAIL,EAAMQ,IAASC,MAAMV,KAIzB,kBAAC,IAAKW,KAAN,CAAWC,KAAM,WAAYC,MAAO,CAAC,CAACC,UAAU,EAAMC,QAAS,0CAC3D,kBAAC,IAAD,CAAOC,KAAK,OAAOC,GAAI,WAAYC,YAAa,wBAEpD,kBAAC,IAAKP,KAAN,CAAWC,KAAM,WAAYC,MAAO,CAAC,CAACC,UAAU,EAAMC,QAAS,oCAC3D,kBAAC,IAAD,CAAOC,KAAK,WAAWC,GAAI,WAAaC,YAAa,kBAEzD,kBAAC,IAAKP,KAAN,KACI,kBAACQ,EAAD,CAAYC,QAASb,EAAWS,KAAM,UAAWK,SAAU,UAA3D,mB,SCfCC,EAAiB,SAAC,GAAgD,IAA/CtB,EAA8C,EAA9CA,QACpBuB,EAAarB,cAAbqB,SADkE,EAE/CpB,iBAASC,EAAW,CAACC,cAAc,IAAtDC,EAFkE,EAElEA,IAAKC,EAF6D,EAE7DA,UAKb,OAAO,kBAAC,IAAD,CAAMC,SAJQ,SAAC,GAAoF,IAAnFgB,EAAkF,EAAlFA,UAAcf,EAAoE,6BACrG,GAAGA,EAAOgB,WAAaD,EAAW,OAAOxB,EAAQ,IAAI0B,MAAM,uEAC3DpB,EAAIiB,EAASd,IAASC,MAAMV,KAG5B,kBAAC,IAAKW,KAAN,CAAWC,KAAM,WAAYC,MAAO,CAAC,CAACC,UAAU,EAAMC,QAAS,0CAC3D,kBAAC,IAAD,CAAOC,KAAK,OAAOC,GAAI,WAAYC,YAAa,wBAEpD,kBAAC,IAAKP,KAAN,CAAWC,KAAM,WAAYC,MAAO,CAAC,CAACC,UAAU,EAAMC,QAAS,oCAC3D,kBAAC,IAAD,CAAOC,KAAK,WAAWC,GAAI,WAAaC,YAAa,kBAEzD,kBAAC,IAAKP,KAAN,CAAWC,KAAM,YAAaC,MAAO,CAAC,CAACC,UAAU,EAAMC,QAAS,oCAC5D,kBAAC,IAAD,CAAOC,KAAK,WAAWC,GAAI,YAAcC,YAAa,8BAE1D,kBAAC,IAAKP,KAAN,KACI,kBAACQ,EAAD,CAAYC,QAASb,EAAWS,KAAM,UAAWK,SAAU,UAA3D,mB,mCCxBG,MAA0B,iCCA1B,MAA0B,iCCA1B,MAA0B,kC,QCa1B,SAASM,IAAsB,IAAD,EACPC,oBAAS,GADF,mBACpCC,EADoC,KACxBC,EADwB,OAEjBF,mBAAuB,MAFN,mBAEpCG,EAFoC,KAE7BC,EAF6B,KAK3C,OACE,kBAACC,EAAD,KACE,kBAACC,EAAD,MACA,kBAACC,EAAD,MACA,kBAACC,EAAD,KACE,kBAACC,EAAD,KAAQR,EAAa,qBAAQ,sBACzB,kBAAC,IAAD,CAAUE,MAAOA,IACpBF,EAAa,kBAAC,EAAD,CAAgB7B,QAASgC,IAAc,kBAAC,EAAD,CAAahC,QAASgC,IAC3E,kBAAC,IAAD,MACA,kBAAC,IAAD,CACEhB,KAAM,OACNsB,QAAS,WACPN,EAAS,MACTF,GAAeD,KAGhBA,EAAa,qEAAgB,kEAOjC,IAAMV,EAAaoB,YAAOC,IAAPD,CAAH,4CAIjBF,EAAQE,IAAOE,GAAV,mFAKLN,EAAaI,IAAOG,IAAV,6VASUC,EAAcC,GAGlCR,EAAaG,YAAOM,IAAPN,CAAH,yLASVN,EAAYM,IAAOG,IAAV,uHAOTR,EAASK,IAAOO,OAAV,mIACQC","file":"static/js/6.015956b8.chunk.js","sourcesContent":["import { useAuth } from \"../context/auth_context\"\r\nimport { Form, Input } from \"antd\";\r\nimport { LongButton } from \".\";\r\nimport { useAsync } from \"../utils/use-async\";\r\nimport React from \"react\"\r\n\r\nexport const LoginScreen = ({onError}: {onError: (error: Error | null)=>void}) => {\r\n    const { login } = useAuth()\r\n    const { run, isLoading } = useAsync(undefined, {throwOnError: true})\r\n    const handleSubmit = (values: {username: string, password:string}) => {\r\n        run(login(values)).catch(onError)\r\n    }\r\n    \r\n    return <Form onFinish={handleSubmit}>\r\n        <Form.Item name={\"username\"} rules={[{required: true, message: \"请输入用户名\"}]}>\r\n            <Input type=\"text\" id={\"username\"} placeholder={\"用户名\"}/>\r\n        </Form.Item>\r\n        <Form.Item name={\"password\"} rules={[{required: true, message: \"请输入密码\"}]}>\r\n            <Input type=\"password\" id={\"password\"}  placeholder={\"密码\"}/>\r\n        </Form.Item>\r\n        <Form.Item>\r\n            <LongButton loading={isLoading} type={\"primary\"} htmlType={\"submit\"}>登录</LongButton>\r\n        </Form.Item>\r\n    </Form>\r\n}","import { useAuth } from \"../context/auth_context\"\r\nimport { Form, Input } from \"antd\";\r\nimport { LongButton } from \".\";\r\nimport { useAsync } from \"../utils/use-async\";\r\nimport React from \"react\"\r\n\r\nexport const RegisterScreen = ({onError}: {onError: (error: Error)=>void}) => {\r\n    const { register } = useAuth()\r\n    const { run, isLoading } = useAsync(undefined, {throwOnError: true})\r\n    const handleSubmit = ({cpassword, ...values}: {username: string, password:string, cpassword: string}) => {\r\n        if(values.password !== cpassword) return onError(new Error(\"请确认两次输入密码相同\"));\r\n        run(register(values)).catch(onError)\r\n    }\r\n    return <Form onFinish={handleSubmit}>\r\n        <Form.Item name={\"username\"} rules={[{required: true, message: \"请输入用户名\"}]}>\r\n            <Input type=\"text\" id={\"username\"} placeholder={\"用户名\"}/>\r\n        </Form.Item>\r\n        <Form.Item name={\"password\"} rules={[{required: true, message: \"请输入密码\"}]}>\r\n            <Input type=\"password\" id={\"password\"}  placeholder={\"密码\"}/>\r\n        </Form.Item>\r\n        <Form.Item name={\"cpassword\"} rules={[{required: true, message: \"请确认密码\"}]}>\r\n            <Input type=\"password\" id={\"cpassword\"}  placeholder={\"确认密码\"}/>\r\n        </Form.Item>\r\n        <Form.Item>\r\n            <LongButton loading={isLoading} type={\"primary\"} htmlType={\"submit\"}>注册</LongButton>\r\n        </Form.Item>\r\n    </Form>\r\n}","export default __webpack_public_path__ + \"static/media/logo.8bb06c97.svg\";","export default __webpack_public_path__ + \"static/media/left.e74de3ec.svg\";","export default __webpack_public_path__ + \"static/media/right.890da620.svg\";","import { useState } from \"react\"\r\nimport { LoginScreen } from \"./login\"\r\nimport { RegisterScreen } from \"./register\"\r\nimport { Card, Divider, Button } from \"antd\"\r\nimport styled from \"@emotion/styled\"\r\nimport logo from \"../assets/logo.svg\"\r\nimport left from \"../assets/left.svg\"\r\nimport right from \"../assets/right.svg\"\r\nimport { ErrorBox } from \"../components/lib\"\r\nimport React from \"react\"\r\n\r\n\r\n\r\nexport default function UnauthenticatedApp() {\r\n  const [isRegister, setIsRegister] = useState(false)\r\n  const [error, setError] = useState<Error | null>(null)\r\n\r\n  // useDocumentTitle(\"请登录或注册以继续\")\r\n  return (\r\n    <Container>\r\n      <Header></Header>\r\n      <Background></Background>\r\n      <ShadowCard>\r\n        <Title>{isRegister ? \"请注册\" : \"请登录\"}</Title>\r\n            <ErrorBox error={error}></ErrorBox>\r\n        {isRegister ? <RegisterScreen onError={setError}/> : <LoginScreen onError={setError}/>}\r\n        <Divider />\r\n        <Button\r\n          type={\"link\"}\r\n          onClick={() => {\r\n            setError(null)\r\n            setIsRegister(!isRegister)\r\n          }}\r\n        >\r\n          {isRegister ? \"已经有帐号了？直接登录\" : \"没有账号？注册新账号\"}\r\n        </Button>\r\n      </ShadowCard>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport const LongButton = styled(Button)`\r\n  width: 100%;\r\n`\r\n\r\nconst Title = styled.h2`\r\n  margin-bottom: 2.4rem;\r\n  color: rgb(94, 108, 132);\r\n`\r\n\r\nconst Background = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-repeat: no-repeat;\r\n  background-attachment: fixed;\r\n  background-position: left bottom, right bottom;\r\n  background-size: calc(((100vw - 40rem) / 2) - 3.2rem),\r\n    calc(((100vw - 40rem) / 2) - 3.2rem), cover;\r\n  background-image: url(${left}), url(${right});\r\n`\r\n\r\nconst ShadowCard = styled(Card)`\r\n  width: 40rem;\r\n  min-height: 56rem;\r\n  padding: 3.2rem 4rem;\r\n  border-radius: 0.3rem;\r\n  box-shadow: rgba(0, 0, 0, 0.1) 0 0 10px;\r\n  text-align: center;\r\n`\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  min-height: 100vh;\r\n`\r\n\r\nconst Header = styled.header`\r\n  background: url(${logo}) no-repeat center;\r\n  padding: 5rem 0;\r\n  background-size: 8rem;\r\n  width: 100%;\r\n`\r\n"],"sourceRoot":""}